// Code generated by protoc-gen-go. DO NOT EDIT.
// source: smartenergytable-service.proto

package v1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Diff_Action int32

const (
	Diff_ADD    Diff_Action = 0
	Diff_DELETE Diff_Action = 1
	Diff_MOVE   Diff_Action = 2
)

var Diff_Action_name = map[int32]string{
	0: "ADD",
	1: "DELETE",
	2: "MOVE",
}

var Diff_Action_value = map[string]int32{
	"ADD":    0,
	"DELETE": 1,
	"MOVE":   2,
}

func (x Diff_Action) String() string {
	return proto.EnumName(Diff_Action_name, int32(x))
}

func (Diff_Action) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7be9bf9d675643a6, []int{7, 0}
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_7be9bf9d675643a6, []int{0}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type Token struct {
	RoomUser             *RoomUser         `protobuf:"bytes,1,opt,name=room_user,json=roomUser,proto3" json:"room_user,omitempty"`
	ObjectIndex          int32             `protobuf:"varint,2,opt,name=object_index,json=objectIndex,proto3" json:"object_index,omitempty"`
	Position             *Vector3_Protocol `protobuf:"bytes,3,opt,name=position,proto3" json:"position,omitempty"`
	ObjectId             string            `protobuf:"bytes,4,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
	Rotation             *Vector3_Protocol `protobuf:"bytes,5,opt,name=rotation,proto3" json:"rotation,omitempty"`
	Scale                float32           `protobuf:"fixed32,6,opt,name=scale,proto3" json:"scale,omitempty"`
	Efficiency           int32             `protobuf:"varint,7,opt,name=efficiency,proto3" json:"efficiency,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Token) Reset()         { *m = Token{} }
func (m *Token) String() string { return proto.CompactTextString(m) }
func (*Token) ProtoMessage()    {}
func (*Token) Descriptor() ([]byte, []int) {
	return fileDescriptor_7be9bf9d675643a6, []int{1}
}

func (m *Token) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Token.Unmarshal(m, b)
}
func (m *Token) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Token.Marshal(b, m, deterministic)
}
func (m *Token) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Token.Merge(m, src)
}
func (m *Token) XXX_Size() int {
	return xxx_messageInfo_Token.Size(m)
}
func (m *Token) XXX_DiscardUnknown() {
	xxx_messageInfo_Token.DiscardUnknown(m)
}

var xxx_messageInfo_Token proto.InternalMessageInfo

func (m *Token) GetRoomUser() *RoomUser {
	if m != nil {
		return m.RoomUser
	}
	return nil
}

func (m *Token) GetObjectIndex() int32 {
	if m != nil {
		return m.ObjectIndex
	}
	return 0
}

func (m *Token) GetPosition() *Vector3_Protocol {
	if m != nil {
		return m.Position
	}
	return nil
}

func (m *Token) GetObjectId() string {
	if m != nil {
		return m.ObjectId
	}
	return ""
}

func (m *Token) GetRotation() *Vector3_Protocol {
	if m != nil {
		return m.Rotation
	}
	return nil
}

func (m *Token) GetScale() float32 {
	if m != nil {
		return m.Scale
	}
	return 0
}

func (m *Token) GetEfficiency() int32 {
	if m != nil {
		return m.Efficiency
	}
	return 0
}

type Vector3_Protocol struct {
	X                    float32  `protobuf:"fixed32,1,opt,name=x,proto3" json:"x,omitempty"`
	Y                    float32  `protobuf:"fixed32,2,opt,name=y,proto3" json:"y,omitempty"`
	Z                    float32  `protobuf:"fixed32,3,opt,name=z,proto3" json:"z,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Vector3_Protocol) Reset()         { *m = Vector3_Protocol{} }
func (m *Vector3_Protocol) String() string { return proto.CompactTextString(m) }
func (*Vector3_Protocol) ProtoMessage()    {}
func (*Vector3_Protocol) Descriptor() ([]byte, []int) {
	return fileDescriptor_7be9bf9d675643a6, []int{2}
}

func (m *Vector3_Protocol) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Vector3_Protocol.Unmarshal(m, b)
}
func (m *Vector3_Protocol) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Vector3_Protocol.Marshal(b, m, deterministic)
}
func (m *Vector3_Protocol) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vector3_Protocol.Merge(m, src)
}
func (m *Vector3_Protocol) XXX_Size() int {
	return xxx_messageInfo_Vector3_Protocol.Size(m)
}
func (m *Vector3_Protocol) XXX_DiscardUnknown() {
	xxx_messageInfo_Vector3_Protocol.DiscardUnknown(m)
}

var xxx_messageInfo_Vector3_Protocol proto.InternalMessageInfo

func (m *Vector3_Protocol) GetX() float32 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *Vector3_Protocol) GetY() float32 {
	if m != nil {
		return m.Y
	}
	return 0
}

func (m *Vector3_Protocol) GetZ() float32 {
	if m != nil {
		return m.Z
	}
	return 0
}

type RoomUser struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId               string   `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RoomUser) Reset()         { *m = RoomUser{} }
func (m *RoomUser) String() string { return proto.CompactTextString(m) }
func (*RoomUser) ProtoMessage()    {}
func (*RoomUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_7be9bf9d675643a6, []int{3}
}

func (m *RoomUser) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoomUser.Unmarshal(m, b)
}
func (m *RoomUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoomUser.Marshal(b, m, deterministic)
}
func (m *RoomUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoomUser.Merge(m, src)
}
func (m *RoomUser) XXX_Size() int {
	return xxx_messageInfo_RoomUser.Size(m)
}
func (m *RoomUser) XXX_DiscardUnknown() {
	xxx_messageInfo_RoomUser.DiscardUnknown(m)
}

var xxx_messageInfo_RoomUser proto.InternalMessageInfo

func (m *RoomUser) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *RoomUser) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type UserPosition struct {
	RoomUser             *RoomUser         `protobuf:"bytes,1,opt,name=room_user,json=roomUser,proto3" json:"room_user,omitempty"`
	NewPosition          *Vector3_Protocol `protobuf:"bytes,2,opt,name=new_position,json=newPosition,proto3" json:"new_position,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *UserPosition) Reset()         { *m = UserPosition{} }
func (m *UserPosition) String() string { return proto.CompactTextString(m) }
func (*UserPosition) ProtoMessage()    {}
func (*UserPosition) Descriptor() ([]byte, []int) {
	return fileDescriptor_7be9bf9d675643a6, []int{4}
}

func (m *UserPosition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserPosition.Unmarshal(m, b)
}
func (m *UserPosition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserPosition.Marshal(b, m, deterministic)
}
func (m *UserPosition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserPosition.Merge(m, src)
}
func (m *UserPosition) XXX_Size() int {
	return xxx_messageInfo_UserPosition.Size(m)
}
func (m *UserPosition) XXX_DiscardUnknown() {
	xxx_messageInfo_UserPosition.DiscardUnknown(m)
}

var xxx_messageInfo_UserPosition proto.InternalMessageInfo

func (m *UserPosition) GetRoomUser() *RoomUser {
	if m != nil {
		return m.RoomUser
	}
	return nil
}

func (m *UserPosition) GetNewPosition() *Vector3_Protocol {
	if m != nil {
		return m.NewPosition
	}
	return nil
}

type MasterSwitch struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	MasterId             string   `protobuf:"bytes,2,opt,name=master_id,json=masterId,proto3" json:"master_id,omitempty"`
	NewMasterId          string   `protobuf:"bytes,3,opt,name=new_master_id,json=newMasterId,proto3" json:"new_master_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MasterSwitch) Reset()         { *m = MasterSwitch{} }
func (m *MasterSwitch) String() string { return proto.CompactTextString(m) }
func (*MasterSwitch) ProtoMessage()    {}
func (*MasterSwitch) Descriptor() ([]byte, []int) {
	return fileDescriptor_7be9bf9d675643a6, []int{5}
}

func (m *MasterSwitch) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MasterSwitch.Unmarshal(m, b)
}
func (m *MasterSwitch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MasterSwitch.Marshal(b, m, deterministic)
}
func (m *MasterSwitch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MasterSwitch.Merge(m, src)
}
func (m *MasterSwitch) XXX_Size() int {
	return xxx_messageInfo_MasterSwitch.Size(m)
}
func (m *MasterSwitch) XXX_DiscardUnknown() {
	xxx_messageInfo_MasterSwitch.DiscardUnknown(m)
}

var xxx_messageInfo_MasterSwitch proto.InternalMessageInfo

func (m *MasterSwitch) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *MasterSwitch) GetMasterId() string {
	if m != nil {
		return m.MasterId
	}
	return ""
}

func (m *MasterSwitch) GetNewMasterId() string {
	if m != nil {
		return m.NewMasterId
	}
	return ""
}

type Scene struct {
	RoomUser             *RoomUser `protobuf:"bytes,1,opt,name=room_user,json=roomUser,proto3" json:"room_user,omitempty"`
	SceneId              int32     `protobuf:"varint,2,opt,name=sceneId,proto3" json:"sceneId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Scene) Reset()         { *m = Scene{} }
func (m *Scene) String() string { return proto.CompactTextString(m) }
func (*Scene) ProtoMessage()    {}
func (*Scene) Descriptor() ([]byte, []int) {
	return fileDescriptor_7be9bf9d675643a6, []int{6}
}

func (m *Scene) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Scene.Unmarshal(m, b)
}
func (m *Scene) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Scene.Marshal(b, m, deterministic)
}
func (m *Scene) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Scene.Merge(m, src)
}
func (m *Scene) XXX_Size() int {
	return xxx_messageInfo_Scene.Size(m)
}
func (m *Scene) XXX_DiscardUnknown() {
	xxx_messageInfo_Scene.DiscardUnknown(m)
}

var xxx_messageInfo_Scene proto.InternalMessageInfo

func (m *Scene) GetRoomUser() *RoomUser {
	if m != nil {
		return m.RoomUser
	}
	return nil
}

func (m *Scene) GetSceneId() int32 {
	if m != nil {
		return m.SceneId
	}
	return 0
}

type Diff struct {
	Action               Diff_Action `protobuf:"varint,1,opt,name=action,proto3,enum=Diff_Action" json:"action,omitempty"`
	Token                *Token      `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Diff) Reset()         { *m = Diff{} }
func (m *Diff) String() string { return proto.CompactTextString(m) }
func (*Diff) ProtoMessage()    {}
func (*Diff) Descriptor() ([]byte, []int) {
	return fileDescriptor_7be9bf9d675643a6, []int{7}
}

func (m *Diff) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Diff.Unmarshal(m, b)
}
func (m *Diff) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Diff.Marshal(b, m, deterministic)
}
func (m *Diff) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Diff.Merge(m, src)
}
func (m *Diff) XXX_Size() int {
	return xxx_messageInfo_Diff.Size(m)
}
func (m *Diff) XXX_DiscardUnknown() {
	xxx_messageInfo_Diff.DiscardUnknown(m)
}

var xxx_messageInfo_Diff proto.InternalMessageInfo

func (m *Diff) GetAction() Diff_Action {
	if m != nil {
		return m.Action
	}
	return Diff_ADD
}

func (m *Diff) GetToken() *Token {
	if m != nil {
		return m.Token
	}
	return nil
}

type EnergyUser struct {
	Time                 string   `protobuf:"bytes,1,opt,name=time,proto3" json:"time,omitempty"`
	Label                string   `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	SourceId             string   `protobuf:"bytes,4,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty"`
	TotalDemand          string   `protobuf:"bytes,5,opt,name=total_demand,json=totalDemand,proto3" json:"total_demand,omitempty"`
	Lighting             string   `protobuf:"bytes,6,opt,name=lighting,proto3" json:"lighting,omitempty"`
	Hvac                 string   `protobuf:"bytes,7,opt,name=hvac,proto3" json:"hvac,omitempty"`
	Appliances           string   `protobuf:"bytes,8,opt,name=appliances,proto3" json:"appliances,omitempty"`
	Lab                  string   `protobuf:"bytes,9,opt,name=lab,proto3" json:"lab,omitempty"`
	Pv                   string   `protobuf:"bytes,10,opt,name=pv,proto3" json:"pv,omitempty"`
	Unit                 string   `protobuf:"bytes,11,opt,name=unit,proto3" json:"unit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EnergyUser) Reset()         { *m = EnergyUser{} }
func (m *EnergyUser) String() string { return proto.CompactTextString(m) }
func (*EnergyUser) ProtoMessage()    {}
func (*EnergyUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_7be9bf9d675643a6, []int{8}
}

func (m *EnergyUser) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnergyUser.Unmarshal(m, b)
}
func (m *EnergyUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnergyUser.Marshal(b, m, deterministic)
}
func (m *EnergyUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnergyUser.Merge(m, src)
}
func (m *EnergyUser) XXX_Size() int {
	return xxx_messageInfo_EnergyUser.Size(m)
}
func (m *EnergyUser) XXX_DiscardUnknown() {
	xxx_messageInfo_EnergyUser.DiscardUnknown(m)
}

var xxx_messageInfo_EnergyUser proto.InternalMessageInfo

func (m *EnergyUser) GetTime() string {
	if m != nil {
		return m.Time
	}
	return ""
}

func (m *EnergyUser) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *EnergyUser) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *EnergyUser) GetSourceId() string {
	if m != nil {
		return m.SourceId
	}
	return ""
}

func (m *EnergyUser) GetTotalDemand() string {
	if m != nil {
		return m.TotalDemand
	}
	return ""
}

func (m *EnergyUser) GetLighting() string {
	if m != nil {
		return m.Lighting
	}
	return ""
}

func (m *EnergyUser) GetHvac() string {
	if m != nil {
		return m.Hvac
	}
	return ""
}

func (m *EnergyUser) GetAppliances() string {
	if m != nil {
		return m.Appliances
	}
	return ""
}

func (m *EnergyUser) GetLab() string {
	if m != nil {
		return m.Lab
	}
	return ""
}

func (m *EnergyUser) GetPv() string {
	if m != nil {
		return m.Pv
	}
	return ""
}

func (m *EnergyUser) GetUnit() string {
	if m != nil {
		return m.Unit
	}
	return ""
}

type EnergyDemandHourly struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Date                 string   `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`
	Year                 string   `protobuf:"bytes,3,opt,name=year,proto3" json:"year,omitempty"`
	Month                string   `protobuf:"bytes,4,opt,name=month,proto3" json:"month,omitempty"`
	Day                  string   `protobuf:"bytes,5,opt,name=day,proto3" json:"day,omitempty"`
	Hour                 string   `protobuf:"bytes,6,opt,name=hour,proto3" json:"hour,omitempty"`
	Minutes              string   `protobuf:"bytes,7,opt,name=minutes,proto3" json:"minutes,omitempty"`
	SourceId             string   `protobuf:"bytes,8,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty"`
	ChannelId            string   `protobuf:"bytes,9,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	Unit                 string   `protobuf:"bytes,10,opt,name=unit,proto3" json:"unit,omitempty"`
	TotalDemand          string   `protobuf:"bytes,11,opt,name=total_demand,json=totalDemand,proto3" json:"total_demand,omitempty"`
	DeltaValue           string   `protobuf:"bytes,12,opt,name=delta_value,json=deltaValue,proto3" json:"delta_value,omitempty"`
	SourceTag            string   `protobuf:"bytes,13,opt,name=source_tag,json=sourceTag,proto3" json:"source_tag,omitempty"`
	ChannelTag           string   `protobuf:"bytes,14,opt,name=channel_tag,json=channelTag,proto3" json:"channel_tag,omitempty"`
	Label                string   `protobuf:"bytes,15,opt,name=label,proto3" json:"label,omitempty"`
	Name                 string   `protobuf:"bytes,16,opt,name=name,proto3" json:"name,omitempty"`
	Height               string   `protobuf:"bytes,17,opt,name=height,proto3" json:"height,omitempty"`
	Area                 string   `protobuf:"bytes,18,opt,name=area,proto3" json:"area,omitempty"`
	WindSpeed            string   `protobuf:"bytes,19,opt,name=wind_speed,json=windSpeed,proto3" json:"wind_speed,omitempty"`
	Temperature          string   `protobuf:"bytes,20,opt,name=temperature,proto3" json:"temperature,omitempty"`
	SolarRad             string   `protobuf:"bytes,21,opt,name=solar_rad,json=solarRad,proto3" json:"solar_rad,omitempty"`
	ElectricityPrice     string   `protobuf:"bytes,22,opt,name=electricity_price,json=electricityPrice,proto3" json:"electricity_price,omitempty"`
	Supply               string   `protobuf:"bytes,23,opt,name=supply,proto3" json:"supply,omitempty"`
	Renewables           string   `protobuf:"bytes,24,opt,name=renewables,proto3" json:"renewables,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EnergyDemandHourly) Reset()         { *m = EnergyDemandHourly{} }
func (m *EnergyDemandHourly) String() string { return proto.CompactTextString(m) }
func (*EnergyDemandHourly) ProtoMessage()    {}
func (*EnergyDemandHourly) Descriptor() ([]byte, []int) {
	return fileDescriptor_7be9bf9d675643a6, []int{9}
}

func (m *EnergyDemandHourly) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnergyDemandHourly.Unmarshal(m, b)
}
func (m *EnergyDemandHourly) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnergyDemandHourly.Marshal(b, m, deterministic)
}
func (m *EnergyDemandHourly) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnergyDemandHourly.Merge(m, src)
}
func (m *EnergyDemandHourly) XXX_Size() int {
	return xxx_messageInfo_EnergyDemandHourly.Size(m)
}
func (m *EnergyDemandHourly) XXX_DiscardUnknown() {
	xxx_messageInfo_EnergyDemandHourly.DiscardUnknown(m)
}

var xxx_messageInfo_EnergyDemandHourly proto.InternalMessageInfo

func (m *EnergyDemandHourly) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *EnergyDemandHourly) GetDate() string {
	if m != nil {
		return m.Date
	}
	return ""
}

func (m *EnergyDemandHourly) GetYear() string {
	if m != nil {
		return m.Year
	}
	return ""
}

func (m *EnergyDemandHourly) GetMonth() string {
	if m != nil {
		return m.Month
	}
	return ""
}

func (m *EnergyDemandHourly) GetDay() string {
	if m != nil {
		return m.Day
	}
	return ""
}

func (m *EnergyDemandHourly) GetHour() string {
	if m != nil {
		return m.Hour
	}
	return ""
}

func (m *EnergyDemandHourly) GetMinutes() string {
	if m != nil {
		return m.Minutes
	}
	return ""
}

func (m *EnergyDemandHourly) GetSourceId() string {
	if m != nil {
		return m.SourceId
	}
	return ""
}

func (m *EnergyDemandHourly) GetChannelId() string {
	if m != nil {
		return m.ChannelId
	}
	return ""
}

func (m *EnergyDemandHourly) GetUnit() string {
	if m != nil {
		return m.Unit
	}
	return ""
}

func (m *EnergyDemandHourly) GetTotalDemand() string {
	if m != nil {
		return m.TotalDemand
	}
	return ""
}

func (m *EnergyDemandHourly) GetDeltaValue() string {
	if m != nil {
		return m.DeltaValue
	}
	return ""
}

func (m *EnergyDemandHourly) GetSourceTag() string {
	if m != nil {
		return m.SourceTag
	}
	return ""
}

func (m *EnergyDemandHourly) GetChannelTag() string {
	if m != nil {
		return m.ChannelTag
	}
	return ""
}

func (m *EnergyDemandHourly) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *EnergyDemandHourly) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *EnergyDemandHourly) GetHeight() string {
	if m != nil {
		return m.Height
	}
	return ""
}

func (m *EnergyDemandHourly) GetArea() string {
	if m != nil {
		return m.Area
	}
	return ""
}

func (m *EnergyDemandHourly) GetWindSpeed() string {
	if m != nil {
		return m.WindSpeed
	}
	return ""
}

func (m *EnergyDemandHourly) GetTemperature() string {
	if m != nil {
		return m.Temperature
	}
	return ""
}

func (m *EnergyDemandHourly) GetSolarRad() string {
	if m != nil {
		return m.SolarRad
	}
	return ""
}

func (m *EnergyDemandHourly) GetElectricityPrice() string {
	if m != nil {
		return m.ElectricityPrice
	}
	return ""
}

func (m *EnergyDemandHourly) GetSupply() string {
	if m != nil {
		return m.Supply
	}
	return ""
}

func (m *EnergyDemandHourly) GetRenewables() string {
	if m != nil {
		return m.Renewables
	}
	return ""
}

type EnergyData struct {
	EnergyUsers          []*EnergyUser         `protobuf:"bytes,1,rep,name=energy_users,json=energyUsers,proto3" json:"energy_users,omitempty"`
	EnergyDemandHourly   []*EnergyDemandHourly `protobuf:"bytes,2,rep,name=energy_demand_hourly,json=energyDemandHourly,proto3" json:"energy_demand_hourly,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *EnergyData) Reset()         { *m = EnergyData{} }
func (m *EnergyData) String() string { return proto.CompactTextString(m) }
func (*EnergyData) ProtoMessage()    {}
func (*EnergyData) Descriptor() ([]byte, []int) {
	return fileDescriptor_7be9bf9d675643a6, []int{10}
}

func (m *EnergyData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnergyData.Unmarshal(m, b)
}
func (m *EnergyData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnergyData.Marshal(b, m, deterministic)
}
func (m *EnergyData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnergyData.Merge(m, src)
}
func (m *EnergyData) XXX_Size() int {
	return xxx_messageInfo_EnergyData.Size(m)
}
func (m *EnergyData) XXX_DiscardUnknown() {
	xxx_messageInfo_EnergyData.DiscardUnknown(m)
}

var xxx_messageInfo_EnergyData proto.InternalMessageInfo

func (m *EnergyData) GetEnergyUsers() []*EnergyUser {
	if m != nil {
		return m.EnergyUsers
	}
	return nil
}

func (m *EnergyData) GetEnergyDemandHourly() []*EnergyDemandHourly {
	if m != nil {
		return m.EnergyDemandHourly
	}
	return nil
}

type Patch struct {
	RoomId               string            `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	SceneId              int32             `protobuf:"varint,2,opt,name=scene_id,json=sceneId,proto3" json:"scene_id,omitempty"`
	UserPosition         *Vector3_Protocol `protobuf:"bytes,3,opt,name=user_position,json=userPosition,proto3" json:"user_position,omitempty"`
	IsMaster             bool              `protobuf:"varint,4,opt,name=is_master,json=isMaster,proto3" json:"is_master,omitempty"`
	Diffs                []*Diff           `protobuf:"bytes,5,rep,name=diffs,proto3" json:"diffs,omitempty"`
	History              []*Diff           `protobuf:"bytes,7,rep,name=history,proto3" json:"history,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Patch) Reset()         { *m = Patch{} }
func (m *Patch) String() string { return proto.CompactTextString(m) }
func (*Patch) ProtoMessage()    {}
func (*Patch) Descriptor() ([]byte, []int) {
	return fileDescriptor_7be9bf9d675643a6, []int{11}
}

func (m *Patch) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Patch.Unmarshal(m, b)
}
func (m *Patch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Patch.Marshal(b, m, deterministic)
}
func (m *Patch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Patch.Merge(m, src)
}
func (m *Patch) XXX_Size() int {
	return xxx_messageInfo_Patch.Size(m)
}
func (m *Patch) XXX_DiscardUnknown() {
	xxx_messageInfo_Patch.DiscardUnknown(m)
}

var xxx_messageInfo_Patch proto.InternalMessageInfo

func (m *Patch) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *Patch) GetSceneId() int32 {
	if m != nil {
		return m.SceneId
	}
	return 0
}

func (m *Patch) GetUserPosition() *Vector3_Protocol {
	if m != nil {
		return m.UserPosition
	}
	return nil
}

func (m *Patch) GetIsMaster() bool {
	if m != nil {
		return m.IsMaster
	}
	return false
}

func (m *Patch) GetDiffs() []*Diff {
	if m != nil {
		return m.Diffs
	}
	return nil
}

func (m *Patch) GetHistory() []*Diff {
	if m != nil {
		return m.History
	}
	return nil
}

func init() {
	proto.RegisterEnum("Diff_Action", Diff_Action_name, Diff_Action_value)
	proto.RegisterType((*Empty)(nil), "Empty")
	proto.RegisterType((*Token)(nil), "Token")
	proto.RegisterType((*Vector3_Protocol)(nil), "Vector3_Protocol")
	proto.RegisterType((*RoomUser)(nil), "RoomUser")
	proto.RegisterType((*UserPosition)(nil), "UserPosition")
	proto.RegisterType((*MasterSwitch)(nil), "MasterSwitch")
	proto.RegisterType((*Scene)(nil), "Scene")
	proto.RegisterType((*Diff)(nil), "Diff")
	proto.RegisterType((*EnergyUser)(nil), "EnergyUser")
	proto.RegisterType((*EnergyDemandHourly)(nil), "EnergyDemandHourly")
	proto.RegisterType((*EnergyData)(nil), "EnergyData")
	proto.RegisterType((*Patch)(nil), "Patch")
}

func init() { proto.RegisterFile("smartenergytable-service.proto", fileDescriptor_7be9bf9d675643a6) }

var fileDescriptor_7be9bf9d675643a6 = []byte{
	// 1185 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x56, 0x51, 0x73, 0xd3, 0x46,
	0x10, 0x8e, 0x9c, 0xd8, 0x96, 0x56, 0x0e, 0x35, 0x07, 0x25, 0x57, 0x02, 0xc4, 0x68, 0x98, 0x92,
	0x4e, 0x07, 0xd1, 0x86, 0x4e, 0x9f, 0xfa, 0x42, 0x89, 0xa7, 0x75, 0x87, 0x4c, 0x33, 0x4a, 0xca,
	0x43, 0x5f, 0x3c, 0x17, 0x69, 0x63, 0x5f, 0x91, 0x25, 0xcd, 0xe9, 0xec, 0x60, 0x5e, 0xf9, 0x01,
	0xed, 0x1f, 0xea, 0x5f, 0xe8, 0x6f, 0xea, 0xec, 0x9d, 0x64, 0x0b, 0xdc, 0x50, 0x9e, 0xb4, 0xfb,
	0xed, 0x6a, 0x6f, 0xf7, 0xbb, 0xbd, 0xbd, 0x83, 0x07, 0xe5, 0x4c, 0x28, 0x8d, 0x19, 0xaa, 0xc9,
	0x52, 0x8b, 0x8b, 0x14, 0x9f, 0x94, 0xa8, 0x16, 0x32, 0xc6, 0xb0, 0x50, 0xb9, 0xce, 0x83, 0x2e,
	0xb4, 0x87, 0xb3, 0x42, 0x2f, 0x83, 0x77, 0x2d, 0x68, 0x9f, 0xe7, 0xaf, 0x31, 0x63, 0x5f, 0x82,
	0xa7, 0xf2, 0x7c, 0x36, 0x9e, 0x97, 0xa8, 0xb8, 0x33, 0x70, 0x0e, 0xfd, 0x23, 0x2f, 0x8c, 0xf2,
	0x7c, 0xf6, 0x5b, 0x89, 0x2a, 0x72, 0x55, 0x25, 0xb1, 0x87, 0xd0, 0xcb, 0x2f, 0xfe, 0xc0, 0x58,
	0x8f, 0x65, 0x96, 0xe0, 0x1b, 0xde, 0x1a, 0x38, 0x87, 0xed, 0xc8, 0xb7, 0xd8, 0x88, 0x20, 0xf6,
	0x04, 0xdc, 0x22, 0x2f, 0xa5, 0x96, 0x79, 0xc6, 0xb7, 0x4d, 0xa4, 0x9b, 0xe1, 0x2b, 0x8c, 0x75,
	0xae, 0x9e, 0x8d, 0x4f, 0x69, 0xfd, 0x38, 0x4f, 0xa3, 0x95, 0x0b, 0xdb, 0x07, 0xaf, 0x8e, 0x98,
	0xf0, 0x9d, 0x81, 0x73, 0xe8, 0x45, 0x6e, 0x15, 0x2e, 0xa1, 0x58, 0x2a, 0xd7, 0xc2, 0xc4, 0x6a,
	0x5f, 0x1b, 0xab, 0x76, 0x61, 0xb7, 0xa1, 0x5d, 0xc6, 0x22, 0x45, 0xde, 0x19, 0x38, 0x87, 0xad,
	0xc8, 0x2a, 0xec, 0x01, 0x00, 0x5e, 0x5e, 0xca, 0x58, 0x62, 0x16, 0x2f, 0x79, 0xd7, 0x64, 0xdc,
	0x40, 0x82, 0x1f, 0xa0, 0xff, 0x61, 0x4c, 0xd6, 0x03, 0xe7, 0x8d, 0xe1, 0xa1, 0x15, 0x39, 0x6f,
	0x48, 0x5b, 0x9a, 0x52, 0x5b, 0x91, 0xb3, 0x24, 0xed, 0xad, 0xa9, 0xac, 0x15, 0x39, 0x6f, 0x83,
	0x67, 0xe0, 0xd6, 0x3c, 0xb1, 0x1b, 0xd0, 0x92, 0x89, 0xf9, 0xcd, 0x8b, 0x5a, 0x32, 0x61, 0x7b,
	0xd0, 0x25, 0x42, 0xa9, 0xb2, 0x96, 0x01, 0x3b, 0xa4, 0x8e, 0x92, 0x20, 0x85, 0x1e, 0xfd, 0x70,
	0x5a, 0x93, 0xf0, 0xa9, 0xf4, 0x7f, 0x07, 0xbd, 0x0c, 0xaf, 0xc6, 0x2b, 0x7e, 0x5b, 0xd7, 0x71,
	0xe2, 0x67, 0x78, 0x55, 0x47, 0x0f, 0xc6, 0xd0, 0x3b, 0x11, 0xa5, 0x46, 0x75, 0x76, 0x25, 0x75,
	0x3c, 0xdd, 0x48, 0x73, 0x1f, 0xbc, 0x99, 0xb1, 0xaf, 0x13, 0x75, 0x2d, 0x30, 0x4a, 0x58, 0x00,
	0xbb, 0xb4, 0xe4, 0xda, 0x61, 0xdb, 0x38, 0xd0, 0x02, 0x27, 0x95, 0x4f, 0x30, 0x82, 0xf6, 0x59,
	0x8c, 0x19, 0x7e, 0x72, 0x1d, 0x1c, 0xba, 0x25, 0xfd, 0x30, 0x4a, 0xaa, 0x0e, 0xaa, 0xd5, 0xa0,
	0x84, 0x9d, 0x63, 0x79, 0x79, 0xc9, 0x1e, 0x41, 0x47, 0xc4, 0xa6, 0x46, 0x0a, 0x73, 0xe3, 0xa8,
	0x17, 0x12, 0x1c, 0x3e, 0x37, 0x58, 0x54, 0xd9, 0xd8, 0x3d, 0x68, 0x6b, 0xea, 0xdf, 0x8a, 0x88,
	0x4e, 0x68, 0xba, 0x39, 0xb2, 0x60, 0xf0, 0x18, 0x3a, 0xd6, 0x9f, 0x75, 0x61, 0xfb, 0xf9, 0xf1,
	0x71, 0x7f, 0x8b, 0x01, 0x74, 0x8e, 0x87, 0x2f, 0x87, 0xe7, 0xc3, 0xbe, 0xc3, 0x5c, 0xd8, 0x39,
	0xf9, 0xf5, 0xd5, 0xb0, 0xdf, 0x0a, 0xfe, 0x6a, 0x01, 0x0c, 0xcd, 0x71, 0x31, 0xd9, 0x31, 0xd8,
	0xd1, 0x72, 0x86, 0x15, 0x43, 0x46, 0xa6, 0xd6, 0x4a, 0xc5, 0x05, 0xa6, 0x15, 0x3f, 0x56, 0x21,
	0xcf, 0x4c, 0xcc, 0xb0, 0xe2, 0xc4, 0xc8, 0xc4, 0x66, 0x99, 0xcf, 0x55, 0x8c, 0x8d, 0x86, 0xb6,
	0xc0, 0x28, 0xa1, 0xf3, 0xa3, 0x73, 0x2d, 0xd2, 0x71, 0x82, 0x33, 0x91, 0x25, 0xa6, 0xa9, 0xbd,
	0xc8, 0x37, 0xd8, 0xb1, 0x81, 0xd8, 0x5d, 0x70, 0x53, 0x39, 0x99, 0x6a, 0x99, 0x4d, 0x4c, 0x1f,
	0x7b, 0xd1, 0x4a, 0xa7, 0xf5, 0xa6, 0x0b, 0x11, 0x9b, 0x26, 0xf6, 0x22, 0x23, 0x53, 0x7b, 0x8b,
	0xa2, 0x48, 0xa5, 0xc8, 0x62, 0x2c, 0xb9, 0x6b, 0x2c, 0x0d, 0x84, 0xf5, 0x61, 0x3b, 0x15, 0x17,
	0xdc, 0x33, 0x06, 0x12, 0x69, 0xff, 0x8b, 0x05, 0x07, 0xbb, 0xff, 0xc5, 0x82, 0xa2, 0xce, 0x33,
	0xa9, 0xb9, 0x6f, 0xa3, 0x92, 0x1c, 0xfc, 0xd9, 0x06, 0x66, 0x29, 0xb1, 0x69, 0xfd, 0x9c, 0xcf,
	0x55, 0xba, 0xdc, 0x68, 0x1d, 0x06, 0x3b, 0x89, 0xd0, 0x58, 0xb1, 0x62, 0x64, 0xc2, 0x96, 0x28,
	0x54, 0x4d, 0x0a, 0xc9, 0x44, 0xdf, 0x2c, 0xcf, 0xf4, 0xb4, 0x22, 0xc4, 0x2a, 0x94, 0x5a, 0x22,
	0x96, 0x15, 0x09, 0x24, 0x9a, 0x02, 0xf3, 0xb9, 0xaa, 0x0a, 0x37, 0x32, 0x35, 0xcb, 0x4c, 0x66,
	0x73, 0x8d, 0x65, 0x55, 0x77, 0xad, 0xbe, 0x4f, 0xb5, 0xfb, 0x01, 0xd5, 0xf7, 0x01, 0xe2, 0xa9,
	0xc8, 0x32, 0x4c, 0xc9, 0x6a, 0xcb, 0xf7, 0x2a, 0x64, 0x94, 0xac, 0x8a, 0x86, 0x75, 0xd1, 0x1b,
	0xbb, 0xe3, 0x6f, 0xee, 0xce, 0x01, 0xf8, 0x09, 0xa6, 0x5a, 0x8c, 0x17, 0x22, 0x9d, 0x23, 0xef,
	0x59, 0xba, 0x0d, 0xf4, 0x8a, 0x10, 0x5a, 0xb6, 0xca, 0x49, 0x8b, 0x09, 0xdf, 0xb5, 0xcb, 0x5a,
	0xe4, 0x5c, 0x4c, 0xe8, 0xff, 0x3a, 0x2b, 0xb2, 0xdf, 0xb0, 0xff, 0x57, 0x10, 0x39, 0xac, 0x1a,
	0xed, 0xb3, 0xff, 0x6a, 0xb4, 0x7e, 0xa3, 0xd1, 0xee, 0x40, 0x67, 0x8a, 0xd4, 0x19, 0xfc, 0xa6,
	0x1d, 0x2e, 0x56, 0x23, 0x5f, 0xa1, 0x50, 0x70, 0x66, 0x7d, 0x49, 0xa6, 0xac, 0xae, 0x64, 0x96,
	0x8c, 0xcb, 0x02, 0x31, 0xe1, 0xb7, 0x6c, 0x56, 0x84, 0x9c, 0x11, 0xc0, 0x06, 0xe0, 0x6b, 0x9c,
	0x15, 0xa8, 0x84, 0x9e, 0x2b, 0xe4, 0xb7, 0xab, 0xba, 0xd7, 0x90, 0xa5, 0x3a, 0x15, 0x6a, 0xac,
	0x44, 0xc2, 0x3f, 0xaf, 0xa9, 0x4e, 0x85, 0x8a, 0x44, 0xc2, 0xbe, 0x86, 0x9b, 0x98, 0x62, 0xac,
	0x95, 0x8c, 0xa5, 0x5e, 0x8e, 0x0b, 0x25, 0x63, 0xe4, 0x77, 0x8c, 0x53, 0xbf, 0x61, 0x38, 0x25,
	0x9c, 0xd2, 0x2e, 0xe7, 0x45, 0x91, 0x2e, 0xf9, 0x9e, 0x4d, 0xdb, 0x6a, 0xd4, 0xc7, 0x0a, 0x33,
	0xbc, 0xa2, 0x0b, 0xab, 0xe4, 0xdc, 0x12, 0xb3, 0x46, 0x82, 0x77, 0x4e, 0x7d, 0x48, 0x8f, 0x85,
	0x16, 0x2c, 0x84, 0x9e, 0xbd, 0xe1, 0xcc, 0xb0, 0x29, 0xb9, 0x33, 0xd8, 0x3e, 0xf4, 0x8f, 0xfc,
	0x70, 0x7d, 0x8e, 0x23, 0x1f, 0x57, 0x72, 0xc9, 0x86, 0x70, 0xbb, 0xf2, 0xb7, 0x9b, 0x3b, 0x9e,
	0x9a, 0x8e, 0xe6, 0x2d, 0xf3, 0xdf, 0xad, 0x70, 0xb3, 0xd9, 0x23, 0x86, 0x1b, 0x58, 0xf0, 0x8f,
	0x03, 0xed, 0x53, 0x41, 0x53, 0x74, 0x0f, 0xba, 0x66, 0xd6, 0xad, 0xce, 0x43, 0x87, 0xd4, 0x51,
	0xc2, 0xbe, 0x00, 0xd7, 0x4c, 0xb3, 0x7a, 0x9a, 0xae, 0xa7, 0x1b, 0xfb, 0x1e, 0x76, 0xcd, 0x85,
	0xf0, 0xff, 0x17, 0x64, 0x6f, 0xde, 0xbc, 0x1f, 0xf6, 0xc1, 0x93, 0x65, 0x35, 0x83, 0xcd, 0x11,
	0x72, 0x23, 0x57, 0x96, 0x76, 0xfe, 0xb2, 0x7d, 0x68, 0x27, 0xf2, 0xf2, 0xb2, 0xe4, 0x6d, 0x53,
	0x4a, 0xdb, 0x4c, 0xca, 0xc8, 0x62, 0xec, 0x00, 0xba, 0x53, 0x59, 0xea, 0x5c, 0xd1, 0xcd, 0xd7,
	0x30, 0xd7, 0xe8, 0xd1, 0xdf, 0xdb, 0xb0, 0x77, 0x46, 0xef, 0x05, 0x4b, 0xc0, 0x39, 0x91, 0x7d,
	0x66, 0x9f, 0x0b, 0xec, 0x21, 0xc0, 0x0b, 0x85, 0x42, 0x23, 0x8d, 0x70, 0xd6, 0x09, 0xcd, 0xab,
	0xe1, 0xee, 0x7a, 0xa2, 0x07, 0x5b, 0xec, 0x21, 0xb8, 0xbf, 0xe4, 0x32, 0x33, 0x0e, 0x6b, 0xc3,
	0xdd, 0x4e, 0x68, 0x48, 0x0a, 0xb6, 0xbe, 0x71, 0xd8, 0x01, 0xb8, 0x67, 0x62, 0x81, 0x9b, 0x2e,
	0xf6, 0x11, 0xb2, 0xc5, 0xee, 0x81, 0xfb, 0x3c, 0x49, 0xec, 0x43, 0xa4, 0x1a, 0xe1, 0x0d, 0xeb,
	0x01, 0xf8, 0x11, 0xce, 0xf2, 0x05, 0x5e, 0xe7, 0x70, 0x1f, 0xbc, 0x93, 0x8f, 0x98, 0x07, 0xe0,
	0xbd, 0x48, 0x51, 0xa8, 0xeb, 0xd7, 0x3f, 0x00, 0xff, 0xc5, 0x54, 0x64, 0x13, 0xb4, 0x97, 0x58,
	0x27, 0x34, 0xdf, 0x86, 0xc3, 0x23, 0xbb, 0x82, 0x6d, 0xa4, 0xdd, 0xb0, 0x79, 0x75, 0xbf, 0xbf,
	0xd0, 0x4b, 0xfc, 0x68, 0xa1, 0x8f, 0xa1, 0x67, 0x17, 0xaa, 0x76, 0x6e, 0x37, 0x6c, 0xde, 0xcb,
	0x0d, 0xc7, 0xaf, 0x60, 0xf7, 0x27, 0xd4, 0x8d, 0x6e, 0x6f, 0x84, 0xab, 0x5b, 0x9c, 0xf0, 0x60,
	0xeb, 0xc7, 0xde, 0xef, 0x50, 0xbc, 0x9e, 0x3c, 0x15, 0x85, 0x7c, 0xba, 0xf8, 0xf6, 0xa2, 0x63,
	0x5e, 0x78, 0xcf, 0xfe, 0x0d, 0x00, 0x00, 0xff, 0xff, 0xde, 0x55, 0x95, 0xd0, 0x03, 0x0a, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SmartEnergyTableServiceClient is the client API for SmartEnergyTableService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SmartEnergyTableServiceClient interface {
	CreateRoom(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*RoomUser, error)
	JoinRoom(ctx context.Context, in *RoomUser, opts ...grpc.CallOption) (SmartEnergyTableService_JoinRoomClient, error)
	SaveRoom(ctx context.Context, in *RoomUser, opts ...grpc.CallOption) (*Empty, error)
	AddToken(ctx context.Context, in *Token, opts ...grpc.CallOption) (*Empty, error)
	RemoveToken(ctx context.Context, in *Token, opts ...grpc.CallOption) (*Empty, error)
	MoveToken(ctx context.Context, in *Token, opts ...grpc.CallOption) (*Empty, error)
	ClearRoom(ctx context.Context, in *RoomUser, opts ...grpc.CallOption) (*Empty, error)
	ChangeScene(ctx context.Context, in *Scene, opts ...grpc.CallOption) (*Empty, error)
	MoveUsers(ctx context.Context, in *UserPosition, opts ...grpc.CallOption) (*Empty, error)
	LeaveRoom(ctx context.Context, in *RoomUser, opts ...grpc.CallOption) (*Empty, error)
	ChangeMaster(ctx context.Context, in *MasterSwitch, opts ...grpc.CallOption) (*Empty, error)
	GetEnergyData(ctx context.Context, in *RoomUser, opts ...grpc.CallOption) (*EnergyData, error)
}

type smartEnergyTableServiceClient struct {
	cc *grpc.ClientConn
}

func NewSmartEnergyTableServiceClient(cc *grpc.ClientConn) SmartEnergyTableServiceClient {
	return &smartEnergyTableServiceClient{cc}
}

func (c *smartEnergyTableServiceClient) CreateRoom(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*RoomUser, error) {
	out := new(RoomUser)
	err := c.cc.Invoke(ctx, "/SmartEnergyTableService/CreateRoom", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *smartEnergyTableServiceClient) JoinRoom(ctx context.Context, in *RoomUser, opts ...grpc.CallOption) (SmartEnergyTableService_JoinRoomClient, error) {
	stream, err := c.cc.NewStream(ctx, &_SmartEnergyTableService_serviceDesc.Streams[0], "/SmartEnergyTableService/JoinRoom", opts...)
	if err != nil {
		return nil, err
	}
	x := &smartEnergyTableServiceJoinRoomClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type SmartEnergyTableService_JoinRoomClient interface {
	Recv() (*Patch, error)
	grpc.ClientStream
}

type smartEnergyTableServiceJoinRoomClient struct {
	grpc.ClientStream
}

func (x *smartEnergyTableServiceJoinRoomClient) Recv() (*Patch, error) {
	m := new(Patch)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *smartEnergyTableServiceClient) SaveRoom(ctx context.Context, in *RoomUser, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/SmartEnergyTableService/SaveRoom", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *smartEnergyTableServiceClient) AddToken(ctx context.Context, in *Token, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/SmartEnergyTableService/AddToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *smartEnergyTableServiceClient) RemoveToken(ctx context.Context, in *Token, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/SmartEnergyTableService/RemoveToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *smartEnergyTableServiceClient) MoveToken(ctx context.Context, in *Token, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/SmartEnergyTableService/MoveToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *smartEnergyTableServiceClient) ClearRoom(ctx context.Context, in *RoomUser, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/SmartEnergyTableService/ClearRoom", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *smartEnergyTableServiceClient) ChangeScene(ctx context.Context, in *Scene, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/SmartEnergyTableService/ChangeScene", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *smartEnergyTableServiceClient) MoveUsers(ctx context.Context, in *UserPosition, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/SmartEnergyTableService/MoveUsers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *smartEnergyTableServiceClient) LeaveRoom(ctx context.Context, in *RoomUser, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/SmartEnergyTableService/LeaveRoom", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *smartEnergyTableServiceClient) ChangeMaster(ctx context.Context, in *MasterSwitch, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/SmartEnergyTableService/ChangeMaster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *smartEnergyTableServiceClient) GetEnergyData(ctx context.Context, in *RoomUser, opts ...grpc.CallOption) (*EnergyData, error) {
	out := new(EnergyData)
	err := c.cc.Invoke(ctx, "/SmartEnergyTableService/GetEnergyData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SmartEnergyTableServiceServer is the server API for SmartEnergyTableService service.
type SmartEnergyTableServiceServer interface {
	CreateRoom(context.Context, *Empty) (*RoomUser, error)
	JoinRoom(*RoomUser, SmartEnergyTableService_JoinRoomServer) error
	SaveRoom(context.Context, *RoomUser) (*Empty, error)
	AddToken(context.Context, *Token) (*Empty, error)
	RemoveToken(context.Context, *Token) (*Empty, error)
	MoveToken(context.Context, *Token) (*Empty, error)
	ClearRoom(context.Context, *RoomUser) (*Empty, error)
	ChangeScene(context.Context, *Scene) (*Empty, error)
	MoveUsers(context.Context, *UserPosition) (*Empty, error)
	LeaveRoom(context.Context, *RoomUser) (*Empty, error)
	ChangeMaster(context.Context, *MasterSwitch) (*Empty, error)
	GetEnergyData(context.Context, *RoomUser) (*EnergyData, error)
}

// UnimplementedSmartEnergyTableServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSmartEnergyTableServiceServer struct {
}

func (*UnimplementedSmartEnergyTableServiceServer) CreateRoom(ctx context.Context, req *Empty) (*RoomUser, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRoom not implemented")
}
func (*UnimplementedSmartEnergyTableServiceServer) JoinRoom(req *RoomUser, srv SmartEnergyTableService_JoinRoomServer) error {
	return status.Errorf(codes.Unimplemented, "method JoinRoom not implemented")
}
func (*UnimplementedSmartEnergyTableServiceServer) SaveRoom(ctx context.Context, req *RoomUser) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveRoom not implemented")
}
func (*UnimplementedSmartEnergyTableServiceServer) AddToken(ctx context.Context, req *Token) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddToken not implemented")
}
func (*UnimplementedSmartEnergyTableServiceServer) RemoveToken(ctx context.Context, req *Token) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveToken not implemented")
}
func (*UnimplementedSmartEnergyTableServiceServer) MoveToken(ctx context.Context, req *Token) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MoveToken not implemented")
}
func (*UnimplementedSmartEnergyTableServiceServer) ClearRoom(ctx context.Context, req *RoomUser) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ClearRoom not implemented")
}
func (*UnimplementedSmartEnergyTableServiceServer) ChangeScene(ctx context.Context, req *Scene) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangeScene not implemented")
}
func (*UnimplementedSmartEnergyTableServiceServer) MoveUsers(ctx context.Context, req *UserPosition) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MoveUsers not implemented")
}
func (*UnimplementedSmartEnergyTableServiceServer) LeaveRoom(ctx context.Context, req *RoomUser) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LeaveRoom not implemented")
}
func (*UnimplementedSmartEnergyTableServiceServer) ChangeMaster(ctx context.Context, req *MasterSwitch) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangeMaster not implemented")
}
func (*UnimplementedSmartEnergyTableServiceServer) GetEnergyData(ctx context.Context, req *RoomUser) (*EnergyData, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetEnergyData not implemented")
}

func RegisterSmartEnergyTableServiceServer(s *grpc.Server, srv SmartEnergyTableServiceServer) {
	s.RegisterService(&_SmartEnergyTableService_serviceDesc, srv)
}

func _SmartEnergyTableService_CreateRoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SmartEnergyTableServiceServer).CreateRoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/SmartEnergyTableService/CreateRoom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SmartEnergyTableServiceServer).CreateRoom(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _SmartEnergyTableService_JoinRoom_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(RoomUser)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(SmartEnergyTableServiceServer).JoinRoom(m, &smartEnergyTableServiceJoinRoomServer{stream})
}

type SmartEnergyTableService_JoinRoomServer interface {
	Send(*Patch) error
	grpc.ServerStream
}

type smartEnergyTableServiceJoinRoomServer struct {
	grpc.ServerStream
}

func (x *smartEnergyTableServiceJoinRoomServer) Send(m *Patch) error {
	return x.ServerStream.SendMsg(m)
}

func _SmartEnergyTableService_SaveRoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RoomUser)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SmartEnergyTableServiceServer).SaveRoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/SmartEnergyTableService/SaveRoom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SmartEnergyTableServiceServer).SaveRoom(ctx, req.(*RoomUser))
	}
	return interceptor(ctx, in, info, handler)
}

func _SmartEnergyTableService_AddToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Token)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SmartEnergyTableServiceServer).AddToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/SmartEnergyTableService/AddToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SmartEnergyTableServiceServer).AddToken(ctx, req.(*Token))
	}
	return interceptor(ctx, in, info, handler)
}

func _SmartEnergyTableService_RemoveToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Token)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SmartEnergyTableServiceServer).RemoveToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/SmartEnergyTableService/RemoveToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SmartEnergyTableServiceServer).RemoveToken(ctx, req.(*Token))
	}
	return interceptor(ctx, in, info, handler)
}

func _SmartEnergyTableService_MoveToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Token)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SmartEnergyTableServiceServer).MoveToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/SmartEnergyTableService/MoveToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SmartEnergyTableServiceServer).MoveToken(ctx, req.(*Token))
	}
	return interceptor(ctx, in, info, handler)
}

func _SmartEnergyTableService_ClearRoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RoomUser)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SmartEnergyTableServiceServer).ClearRoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/SmartEnergyTableService/ClearRoom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SmartEnergyTableServiceServer).ClearRoom(ctx, req.(*RoomUser))
	}
	return interceptor(ctx, in, info, handler)
}

func _SmartEnergyTableService_ChangeScene_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Scene)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SmartEnergyTableServiceServer).ChangeScene(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/SmartEnergyTableService/ChangeScene",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SmartEnergyTableServiceServer).ChangeScene(ctx, req.(*Scene))
	}
	return interceptor(ctx, in, info, handler)
}

func _SmartEnergyTableService_MoveUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserPosition)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SmartEnergyTableServiceServer).MoveUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/SmartEnergyTableService/MoveUsers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SmartEnergyTableServiceServer).MoveUsers(ctx, req.(*UserPosition))
	}
	return interceptor(ctx, in, info, handler)
}

func _SmartEnergyTableService_LeaveRoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RoomUser)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SmartEnergyTableServiceServer).LeaveRoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/SmartEnergyTableService/LeaveRoom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SmartEnergyTableServiceServer).LeaveRoom(ctx, req.(*RoomUser))
	}
	return interceptor(ctx, in, info, handler)
}

func _SmartEnergyTableService_ChangeMaster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MasterSwitch)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SmartEnergyTableServiceServer).ChangeMaster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/SmartEnergyTableService/ChangeMaster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SmartEnergyTableServiceServer).ChangeMaster(ctx, req.(*MasterSwitch))
	}
	return interceptor(ctx, in, info, handler)
}

func _SmartEnergyTableService_GetEnergyData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RoomUser)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SmartEnergyTableServiceServer).GetEnergyData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/SmartEnergyTableService/GetEnergyData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SmartEnergyTableServiceServer).GetEnergyData(ctx, req.(*RoomUser))
	}
	return interceptor(ctx, in, info, handler)
}

var _SmartEnergyTableService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "SmartEnergyTableService",
	HandlerType: (*SmartEnergyTableServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateRoom",
			Handler:    _SmartEnergyTableService_CreateRoom_Handler,
		},
		{
			MethodName: "SaveRoom",
			Handler:    _SmartEnergyTableService_SaveRoom_Handler,
		},
		{
			MethodName: "AddToken",
			Handler:    _SmartEnergyTableService_AddToken_Handler,
		},
		{
			MethodName: "RemoveToken",
			Handler:    _SmartEnergyTableService_RemoveToken_Handler,
		},
		{
			MethodName: "MoveToken",
			Handler:    _SmartEnergyTableService_MoveToken_Handler,
		},
		{
			MethodName: "ClearRoom",
			Handler:    _SmartEnergyTableService_ClearRoom_Handler,
		},
		{
			MethodName: "ChangeScene",
			Handler:    _SmartEnergyTableService_ChangeScene_Handler,
		},
		{
			MethodName: "MoveUsers",
			Handler:    _SmartEnergyTableService_MoveUsers_Handler,
		},
		{
			MethodName: "LeaveRoom",
			Handler:    _SmartEnergyTableService_LeaveRoom_Handler,
		},
		{
			MethodName: "ChangeMaster",
			Handler:    _SmartEnergyTableService_ChangeMaster_Handler,
		},
		{
			MethodName: "GetEnergyData",
			Handler:    _SmartEnergyTableService_GetEnergyData_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "JoinRoom",
			Handler:       _SmartEnergyTableService_JoinRoom_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "smartenergytable-service.proto",
}
