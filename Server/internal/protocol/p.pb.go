// Code generated by protoc-gen-go. DO NOT EDIT.
// source: p.proto

package protocol

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Create struct {
	User                 string   `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Create) Reset()         { *m = Create{} }
func (m *Create) String() string { return proto.CompactTextString(m) }
func (*Create) ProtoMessage()    {}
func (*Create) Descriptor() ([]byte, []int) {
	return fileDescriptor_abe44bf90c1c2369, []int{0}
}

func (m *Create) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Create.Unmarshal(m, b)
}
func (m *Create) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Create.Marshal(b, m, deterministic)
}
func (m *Create) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Create.Merge(m, src)
}
func (m *Create) XXX_Size() int {
	return xxx_messageInfo_Create.Size(m)
}
func (m *Create) XXX_DiscardUnknown() {
	xxx_messageInfo_Create.DiscardUnknown(m)
}

var xxx_messageInfo_Create proto.InternalMessageInfo

func (m *Create) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

type Session struct {
	SessionId            string   `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	User                 string   `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Session) Reset()         { *m = Session{} }
func (m *Session) String() string { return proto.CompactTextString(m) }
func (*Session) ProtoMessage()    {}
func (*Session) Descriptor() ([]byte, []int) {
	return fileDescriptor_abe44bf90c1c2369, []int{1}
}

func (m *Session) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Session.Unmarshal(m, b)
}
func (m *Session) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Session.Marshal(b, m, deterministic)
}
func (m *Session) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Session.Merge(m, src)
}
func (m *Session) XXX_Size() int {
	return xxx_messageInfo_Session.Size(m)
}
func (m *Session) XXX_DiscardUnknown() {
	xxx_messageInfo_Session.DiscardUnknown(m)
}

var xxx_messageInfo_Session proto.InternalMessageInfo

func (m *Session) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

func (m *Session) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

type Owner struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Owner) Reset()         { *m = Owner{} }
func (m *Owner) String() string { return proto.CompactTextString(m) }
func (*Owner) ProtoMessage()    {}
func (*Owner) Descriptor() ([]byte, []int) {
	return fileDescriptor_abe44bf90c1c2369, []int{2}
}

func (m *Owner) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Owner.Unmarshal(m, b)
}
func (m *Owner) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Owner.Marshal(b, m, deterministic)
}
func (m *Owner) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Owner.Merge(m, src)
}
func (m *Owner) XXX_Size() int {
	return xxx_messageInfo_Owner.Size(m)
}
func (m *Owner) XXX_DiscardUnknown() {
	xxx_messageInfo_Owner.DiscardUnknown(m)
}

var xxx_messageInfo_Owner proto.InternalMessageInfo

type Entity struct {
	X                    float32  `protobuf:"fixed32,1,opt,name=x,proto3" json:"x,omitempty"`
	Y                    float32  `protobuf:"fixed32,2,opt,name=y,proto3" json:"y,omitempty"`
	Z                    float32  `protobuf:"fixed32,3,opt,name=z,proto3" json:"z,omitempty"`
	Id                   int32    `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Entity) Reset()         { *m = Entity{} }
func (m *Entity) String() string { return proto.CompactTextString(m) }
func (*Entity) ProtoMessage()    {}
func (*Entity) Descriptor() ([]byte, []int) {
	return fileDescriptor_abe44bf90c1c2369, []int{3}
}

func (m *Entity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Entity.Unmarshal(m, b)
}
func (m *Entity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Entity.Marshal(b, m, deterministic)
}
func (m *Entity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Entity.Merge(m, src)
}
func (m *Entity) XXX_Size() int {
	return xxx_messageInfo_Entity.Size(m)
}
func (m *Entity) XXX_DiscardUnknown() {
	xxx_messageInfo_Entity.DiscardUnknown(m)
}

var xxx_messageInfo_Entity proto.InternalMessageInfo

func (m *Entity) GetX() float32 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *Entity) GetY() float32 {
	if m != nil {
		return m.Y
	}
	return 0
}

func (m *Entity) GetZ() float32 {
	if m != nil {
		return m.Z
	}
	return 0
}

func (m *Entity) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type Update struct {
	Entities             []*Entity `protobuf:"bytes,1,rep,name=entities,proto3" json:"entities,omitempty"`
	Owner                *Owner    `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Update) Reset()         { *m = Update{} }
func (m *Update) String() string { return proto.CompactTextString(m) }
func (*Update) ProtoMessage()    {}
func (*Update) Descriptor() ([]byte, []int) {
	return fileDescriptor_abe44bf90c1c2369, []int{4}
}

func (m *Update) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Update.Unmarshal(m, b)
}
func (m *Update) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Update.Marshal(b, m, deterministic)
}
func (m *Update) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Update.Merge(m, src)
}
func (m *Update) XXX_Size() int {
	return xxx_messageInfo_Update.Size(m)
}
func (m *Update) XXX_DiscardUnknown() {
	xxx_messageInfo_Update.DiscardUnknown(m)
}

var xxx_messageInfo_Update proto.InternalMessageInfo

func (m *Update) GetEntities() []*Entity {
	if m != nil {
		return m.Entities
	}
	return nil
}

func (m *Update) GetOwner() *Owner {
	if m != nil {
		return m.Owner
	}
	return nil
}

type Status struct {
	StatusCode           int32    `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Status) Reset()         { *m = Status{} }
func (m *Status) String() string { return proto.CompactTextString(m) }
func (*Status) ProtoMessage()    {}
func (*Status) Descriptor() ([]byte, []int) {
	return fileDescriptor_abe44bf90c1c2369, []int{5}
}

func (m *Status) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Status.Unmarshal(m, b)
}
func (m *Status) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Status.Marshal(b, m, deterministic)
}
func (m *Status) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Status.Merge(m, src)
}
func (m *Status) XXX_Size() int {
	return xxx_messageInfo_Status.Size(m)
}
func (m *Status) XXX_DiscardUnknown() {
	xxx_messageInfo_Status.DiscardUnknown(m)
}

var xxx_messageInfo_Status proto.InternalMessageInfo

func (m *Status) GetStatusCode() int32 {
	if m != nil {
		return m.StatusCode
	}
	return 0
}

func (m *Status) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*Create)(nil), "protocol.Create")
	proto.RegisterType((*Session)(nil), "protocol.Session")
	proto.RegisterType((*Owner)(nil), "protocol.Owner")
	proto.RegisterType((*Entity)(nil), "protocol.Entity")
	proto.RegisterType((*Update)(nil), "protocol.Update")
	proto.RegisterType((*Status)(nil), "protocol.Status")
}

func init() {
	proto.RegisterFile("p.proto", fileDescriptor_abe44bf90c1c2369)
}

var fileDescriptor_abe44bf90c1c2369 = []byte{
	// 360 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x91, 0xcf, 0x4b, 0xe3, 0x40,
	0x14, 0xc7, 0x9b, 0xb4, 0x49, 0xda, 0x97, 0xdd, 0xee, 0xee, 0x9c, 0x42, 0x59, 0xb1, 0x0c, 0x08,
	0x3d, 0x48, 0x91, 0x2a, 0xf5, 0xe2, 0xc9, 0xda, 0x83, 0x5e, 0x84, 0x09, 0x1e, 0xa5, 0xc4, 0xe4,
	0xa9, 0x03, 0x9a, 0x09, 0x99, 0x69, 0x6d, 0xfa, 0x27, 0xf8, 0x57, 0x4b, 0x66, 0x92, 0x36, 0xa0,
	0x20, 0xf5, 0x34, 0xef, 0xc7, 0xf7, 0xf3, 0xde, 0x77, 0x66, 0xc0, 0xcb, 0xc6, 0x59, 0x2e, 0x94,
	0x20, 0x5d, 0x7d, 0xc4, 0xe2, 0x85, 0xfe, 0x07, 0x77, 0x96, 0x63, 0xa4, 0x90, 0x10, 0xe8, 0x2c,
	0x25, 0xe6, 0x81, 0x35, 0xb4, 0x46, 0x3d, 0xa6, 0x63, 0x7a, 0x01, 0x5e, 0x88, 0x52, 0x72, 0x91,
	0x92, 0x03, 0x00, 0x69, 0xc2, 0x05, 0x4f, 0x2a, 0x51, 0xaf, 0xaa, 0x5c, 0x27, 0x5b, 0xda, 0x6e,
	0xd0, 0x1e, 0x38, 0xb7, 0x6f, 0x29, 0xe6, 0xf4, 0x12, 0xdc, 0x79, 0xaa, 0xb8, 0x2a, 0xc8, 0x2f,
	0xb0, 0xd6, 0x1a, 0xb6, 0x99, 0xb5, 0x2e, 0xb3, 0x42, 0x13, 0x36, 0xb3, 0x74, 0x6f, 0x13, 0xb4,
	0x4d, 0xb6, 0x21, 0x7d, 0xb0, 0x79, 0x12, 0x74, 0x86, 0xd6, 0xc8, 0x61, 0x36, 0x4f, 0xe8, 0x3d,
	0xb8, 0x77, 0x59, 0x52, 0x1a, 0x3d, 0x86, 0x2e, 0x96, 0xd3, 0x38, 0xca, 0xc0, 0x1a, 0xb6, 0x47,
	0xfe, 0xe4, 0xef, 0xb8, 0xbe, 0xcf, 0xd8, 0xec, 0x61, 0x5b, 0x05, 0x39, 0x02, 0x47, 0x94, 0x26,
	0xf4, 0x1e, 0x7f, 0xf2, 0x67, 0x27, 0xd5, 0xde, 0x98, 0xe9, 0xd2, 0x19, 0xb8, 0xa1, 0x8a, 0xd4,
	0x52, 0x92, 0x43, 0xf0, 0xa5, 0x8e, 0x16, 0xb1, 0x48, 0x50, 0x9b, 0x75, 0x18, 0x98, 0xd2, 0x4c,
	0x24, 0x48, 0x02, 0xf0, 0x5e, 0x51, 0xca, 0xe8, 0x09, 0xab, 0xdb, 0xd6, 0xe9, 0xe4, 0xbd, 0x0d,
	0x7e, 0x58, 0xa4, 0x71, 0x88, 0xf9, 0x8a, 0xc7, 0x48, 0xa6, 0xf0, 0xdb, 0x3c, 0x6e, 0xfd, 0x88,
	0x0d, 0xa3, 0xa6, 0x31, 0xf8, 0xb7, 0xab, 0x54, 0x22, 0xda, 0x22, 0xe7, 0xd0, 0xbf, 0x42, 0xa9,
	0x72, 0x51, 0xd4, 0xe0, 0x67, 0xd9, 0xa0, 0x31, 0xcb, 0x38, 0xa7, 0x2d, 0x72, 0x06, 0x7e, 0xa8,
	0x44, 0xf6, 0x03, 0x2a, 0x5a, 0xe1, 0xfe, 0xd4, 0x8d, 0xe0, 0xe9, 0x9e, 0xd4, 0x14, 0xfa, 0xe6,
	0x1b, 0xe7, 0xf5, 0x07, 0x35, 0x54, 0xa6, 0xf3, 0x25, 0x77, 0x02, 0x1e, 0xc3, 0xc7, 0x1c, 0xe5,
	0xf3, 0x37, 0x9b, 0xcc, 0x0c, 0xda, 0x7a, 0x70, 0x75, 0xe9, 0xf4, 0x23, 0x00, 0x00, 0xff, 0xff,
	0xae, 0xd5, 0xfc, 0x7d, 0xf5, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SyncServiceClient is the client API for SyncService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SyncServiceClient interface {
	CreateSession(ctx context.Context, in *Create, opts ...grpc.CallOption) (*Session, error)
	DestroySession(ctx context.Context, in *Session, opts ...grpc.CallOption) (*Status, error)
	StopSession(ctx context.Context, in *Session, opts ...grpc.CallOption) (*Status, error)
	SaveSession(ctx context.Context, in *Session, opts ...grpc.CallOption) (*Status, error)
	JoinSession(ctx context.Context, in *Session, opts ...grpc.CallOption) (*Status, error)
	UpdateEntities(ctx context.Context, in *Update, opts ...grpc.CallOption) (*Status, error)
	Refresh(ctx context.Context, in *Session, opts ...grpc.CallOption) (*Update, error)
}

type syncServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewSyncServiceClient(cc grpc.ClientConnInterface) SyncServiceClient {
	return &syncServiceClient{cc}
}

func (c *syncServiceClient) CreateSession(ctx context.Context, in *Create, opts ...grpc.CallOption) (*Session, error) {
	out := new(Session)
	err := c.cc.Invoke(ctx, "/protocol.SyncService/CreateSession", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) DestroySession(ctx context.Context, in *Session, opts ...grpc.CallOption) (*Status, error) {
	out := new(Status)
	err := c.cc.Invoke(ctx, "/protocol.SyncService/DestroySession", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) StopSession(ctx context.Context, in *Session, opts ...grpc.CallOption) (*Status, error) {
	out := new(Status)
	err := c.cc.Invoke(ctx, "/protocol.SyncService/StopSession", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) SaveSession(ctx context.Context, in *Session, opts ...grpc.CallOption) (*Status, error) {
	out := new(Status)
	err := c.cc.Invoke(ctx, "/protocol.SyncService/SaveSession", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) JoinSession(ctx context.Context, in *Session, opts ...grpc.CallOption) (*Status, error) {
	out := new(Status)
	err := c.cc.Invoke(ctx, "/protocol.SyncService/JoinSession", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) UpdateEntities(ctx context.Context, in *Update, opts ...grpc.CallOption) (*Status, error) {
	out := new(Status)
	err := c.cc.Invoke(ctx, "/protocol.SyncService/UpdateEntities", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Refresh(ctx context.Context, in *Session, opts ...grpc.CallOption) (*Update, error) {
	out := new(Update)
	err := c.cc.Invoke(ctx, "/protocol.SyncService/Refresh", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SyncServiceServer is the server API for SyncService service.
type SyncServiceServer interface {
	CreateSession(context.Context, *Create) (*Session, error)
	DestroySession(context.Context, *Session) (*Status, error)
	StopSession(context.Context, *Session) (*Status, error)
	SaveSession(context.Context, *Session) (*Status, error)
	JoinSession(context.Context, *Session) (*Status, error)
	UpdateEntities(context.Context, *Update) (*Status, error)
	Refresh(context.Context, *Session) (*Update, error)
}

// UnimplementedSyncServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSyncServiceServer struct {
}

func (*UnimplementedSyncServiceServer) CreateSession(ctx context.Context, req *Create) (*Session, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSession not implemented")
}
func (*UnimplementedSyncServiceServer) DestroySession(ctx context.Context, req *Session) (*Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DestroySession not implemented")
}
func (*UnimplementedSyncServiceServer) StopSession(ctx context.Context, req *Session) (*Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StopSession not implemented")
}
func (*UnimplementedSyncServiceServer) SaveSession(ctx context.Context, req *Session) (*Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveSession not implemented")
}
func (*UnimplementedSyncServiceServer) JoinSession(ctx context.Context, req *Session) (*Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method JoinSession not implemented")
}
func (*UnimplementedSyncServiceServer) UpdateEntities(ctx context.Context, req *Update) (*Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateEntities not implemented")
}
func (*UnimplementedSyncServiceServer) Refresh(ctx context.Context, req *Session) (*Update, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Refresh not implemented")
}

func RegisterSyncServiceServer(s *grpc.Server, srv SyncServiceServer) {
	s.RegisterService(&_SyncService_serviceDesc, srv)
}

func _SyncService_CreateSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Create)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).CreateSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.SyncService/CreateSession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).CreateSession(ctx, req.(*Create))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_DestroySession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Session)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).DestroySession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.SyncService/DestroySession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).DestroySession(ctx, req.(*Session))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_StopSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Session)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).StopSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.SyncService/StopSession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).StopSession(ctx, req.(*Session))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_SaveSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Session)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).SaveSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.SyncService/SaveSession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).SaveSession(ctx, req.(*Session))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_JoinSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Session)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).JoinSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.SyncService/JoinSession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).JoinSession(ctx, req.(*Session))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_UpdateEntities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Update)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).UpdateEntities(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.SyncService/UpdateEntities",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).UpdateEntities(ctx, req.(*Update))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Refresh_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Session)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Refresh(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.SyncService/Refresh",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Refresh(ctx, req.(*Session))
	}
	return interceptor(ctx, in, info, handler)
}

var _SyncService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protocol.SyncService",
	HandlerType: (*SyncServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateSession",
			Handler:    _SyncService_CreateSession_Handler,
		},
		{
			MethodName: "DestroySession",
			Handler:    _SyncService_DestroySession_Handler,
		},
		{
			MethodName: "StopSession",
			Handler:    _SyncService_StopSession_Handler,
		},
		{
			MethodName: "SaveSession",
			Handler:    _SyncService_SaveSession_Handler,
		},
		{
			MethodName: "JoinSession",
			Handler:    _SyncService_JoinSession_Handler,
		},
		{
			MethodName: "UpdateEntities",
			Handler:    _SyncService_UpdateEntities_Handler,
		},
		{
			MethodName: "Refresh",
			Handler:    _SyncService_Refresh_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "p.proto",
}
